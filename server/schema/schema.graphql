type Query {
  info: String!
  user(email: String!): User
  allUsers: [User]!
}

type Mutation {
  addUser(
    name: String!
    email: String!
    password: String!
  ): temporaryUser
  updateUser(
    name: String
    email: String!
    password: String
    username: String
    watchlist: [String]
    avatarURL: String
    backgroundURL: String
  ): UserResponse
  deleteUser(email: String!): Response
  verifyUser(email: String!, verificationCode: Int!): Response
  login(email: String!, password: String!): UserResponse
  findUser(email: String!): UserResponse
}

type User {
  id: ID!
  name: String
  email: String!
  username: String
  password: String!
  watchlist: [String]
  avatarURL: String
  backgroundURL: String
}

type UserResponse {
  message: String!
  success: Boolean!
  user: User
  token: String
}

type Response {
  message: String!
  success: Boolean!
}

type temporaryUser {
  message: String!
  success: Boolean!
  token: String
}